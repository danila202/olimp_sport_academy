import requests
from telebot import types
from telegram_bot.fill_data import start_registrate
from telegram_bot.user_menu import create_menu, create_login_button, create_registration_button

payload = {}
session = {}


def input_username(message, bot):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –í–∞—à username:")
    bot.register_next_step_handler(msg, input_password,bot)


def input_password(message, bot):
    payload["username"] = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –í–∞—à password")
    bot.register_next_step_handler(msg, handler_login, bot)


def handler_login(message,bot):
    payload["password"] = message.text
    with requests.session() as s:
        s.get('http://0.0.0.0:8000/auth/login/')
        csrf_token = s.cookies['csrftoken']
        headers = {
        'X-CSRFToken': csrf_token
        }
        response = s.post('http://0.0.0.0:8000/auth/login/', data=payload, headers=headers)
        if response.url == 'http://0.0.0.0:8000/accounts/profile/':
            bot.send_message(message.chat.id, 'ü•≥<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –í—ã –≤–æ—à–ª–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç!</b>\n'
                                              '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –æ—Ñ–æ—Ä–º–∏—Ç–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç'
                                              '—É –í–∞—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                                              '–∏ –ø–æ—Å–µ—â–µ–Ω–∏–µ', parse_mode="HTML")
            json_custom_user = s.get(f'http://0.0.0.0:8000/tg/user-info?username='
                                            f'{payload["username"]}').json()
            session[message.chat.id] = json_custom_user
            create_menu(message, bot, json_custom_user['is_parent'])

        else:
            bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π username –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
            payload.clear()
            create_login_button(message, bot)
            bot.register_next_step_handler(message, input_username, bot)


def is_login(message, bot):
    if message.chat.id not in session:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        register_parent = types.KeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å")
        login_button = types.KeyboardButton("–í–æ–π—Ç–∏")
        markup.add(register_parent, login_button)
        bot.send_message(message.chat.id, '–î–æ—Å—Ç—É–ø–Ω—ã –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞', reply_markup=markup)


def logout(message, bot):
    del session[message.chat.id]
    create_login_button(message, bot)
    requests.get('http://0.0.0.0:8000/auth/logout/')


def fill_user_data(message, bot):
    if message.chat.id in session:
        if session[message.chat.id]['is_parent']:
            response = requests.get(f'http://0.0.0.0:8000/tg/parent-info?username='
                         f'{session[message.chat.id]["username"]}')
            if response.status_code==200:
                data = response.json()
                bot.send_message(
                    message.chat.id,
                    f'–ò–º—è - <b>{data["name"]}</b>\n'
                    f'–§–∞–º–∏–ª–∏—è - <b>{data["surname"]}</b>\n'
                    f'–û—Ç—á–µ—Å—Ç–≤–æ - <b>{data["patronymic"]}</b>\n'
                    f'–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω - <b>{data["mobile_phone"]}</b>',
                    parse_mode='HTML')
            else:
                start_registrate(message, bot,session[message.chat.id], is_parent=True)
        else:
            response = requests.get(f'http://0.0.0.0:8000/tg/child-info?username='
                                    f'{session[message.chat.id]["username"]}')

            if response.status_code==200:
                data = response.json()
                bot.send_message(
                    message.chat.id,
                    f'–ò–º—è - <b>{data["name"]}</b>\n'
                    f'–§–∞–º–∏–ª–∏—è - <b>{data["surname"]}</b>\n'
                    f'–û—Ç—á–µ—Å—Ç–≤–æ - <b>{data["patronymic"]}</b>\n'
                    f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - <b>{data["birthdate"]}</b>\n'
                    f'–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω - <b>{data["mobile_phone"]}</b>',
                    parse_mode='HTML')
            else:
                msg = bot.send_message(message.chat.id,'–£–∫–∞–∂–∏—Ç–µ username —Ä–æ–¥–∏—Ç–µ–ª—è')
                bot.register_next_step_handler(
                    msg,start_registrate, bot, session[message.chat.id],is_parent=False
                )

