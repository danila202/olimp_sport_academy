import os
import telebot
from telebot import types
from telebot.types import Message, BotCommand
from dotenv import load_dotenv
from telegram_bot.registration import handler_registration
from telegram_bot.auth import input_username, fill_user_data, logout, is_login
from telegram_bot.handel_schedule import view_schedule
from telegram_bot.user_menu import create_registration_button, create_login_button
from telegram_bot.handel_visitation import view_visitation


load_dotenv()

API_TOKEN = os.environ.get('API_TOKEN')


bot = telebot.TeleBot(API_TOKEN)
user = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ")
    bot.register_next_step_handler(message, callback=is_correct_secret_key)


@bot.message_handler(commands=['buttons'])
def create_buttons(message):
    is_login(message, bot)

def set_bot_commands():
    commands = [BotCommand("buttons", '–ö–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞')]
    bot.set_my_commands(commands)


def is_correct_secret_key(message):
    if message.text == os.environ.get("SECRET_WORD"):
        bot.send_message(message.chat.id, "–í–µ—Ä–Ω–æ. –¢–µ–ø–µ—Ä—å –ø—Ä–µ–¥–ª–∞–≥–∞—é –í–∞–º –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n"
                                          "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /buttons")


    else:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ")
        send_welcome(message)

@bot.message_handler(func=lambda message: message.text == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å"
                     or message.text == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω")
def create_register_button(message):
        bot.register_next_step_handler(message, callback=registrate)

def registrate(message):
    if message.text == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å":
        user['is_parent'] = True
        user['is_child'] = False
    elif message.text == "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω":
        user['is_parent'] = False
        user['is_child'] = True
    handler_registration(message, bot, user)

@bot.message_handler(func=lambda message: message.text=="–í–æ–π—Ç–∏")
def login(message):
    input_username(message, bot)


@bot.message_handler(func=lambda message: message.text=="üë§ –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
def fill_personal_data(message):
    fill_user_data(message, bot)


@bot.message_handler(func=lambda message: message.text=="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
def handel_schedule(message):
    view_schedule(message, bot)


@bot.message_handler(func=lambda message: message.text=="‚úÖ –ü–æ—Å–µ—â–µ–Ω–∏—è")
def handel_visitation(message):
    view_visitation(message, bot)

@bot.message_handler(func=lambda message: message.text=="üëã –í—ã–π—Ç–∏")
def handel_logout(message):
    logout(message, bot)




if __name__ =="__main__":
    set_bot_commands()
    bot.polling()